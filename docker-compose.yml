services:
  users-service:
    build:
      context: .
      dockerfile: Dockerfile.users
    ports:
      - '8000:8000'
    volumes:
      - .:/app/
    working_dir: /app
    env_file:
      - .env-dev
    environment:
      - DATABASE_SCHEMA=public
      - SERVICE_NAME=users
    command: sh -c "uvicorn src.users_main:app --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - my_app_network

  menu-service:
    build:
      context: .
      dockerfile: Dockerfile.menu
    ports:
      - '8001:8001'
    volumes:
      - .:/app/
    working_dir: /app
    env_file:
      - .env-dev
    environment:
      - DATABASE_SCHEMA=menu
      - SERVICE_NAME=menu
    command: uvicorn src.menu_main:app --host 0.0.0.0 --port 8001
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - my_app_network

  rabbitmq:
    image: rabbitmq:4.1.0-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - my_app_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  database:
    image: postgres:17-alpine
    container_name: postgresapp_fastapi
    environment:
      - POSTGRES_USER=projectuser
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=fast
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - my_app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U projectuser -d fast"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - my_app_network
  
  redis-commander:
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=redis
    ports:
      - "8081:8081"
    networks:
      - my_app_network

  some-service:
    build:
      context: .
      dockerfile: Dockerfile.some
    ports:
      - '8002:8002'
    volumes:
      - .:/app/
    working_dir: /app
    env_file:
      - .env-dev
    environment:
      - SERVICE_NAME=some
    command: uvicorn src.some_main:app --host 0.0.0.0 --port 8002
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - my_app_network

networks:
  my_app_network: 
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data: