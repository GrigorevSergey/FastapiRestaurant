"""create order tables

Revision ID: b5ad09a17e0f
Revises: e9ecdc50c586
Create Date: 2025-06-17 05:30:35.108986

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b5ad09a17e0f'
down_revision: Union[str, None] = 'e9ecdc50c586'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('number_phone', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_phone_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='account'
    )
    op.create_index(op.f('ix_account_users_email'), 'users', ['email'], unique=True, schema='account')
    op.create_index(op.f('ix_account_users_id'), 'users', ['id'], unique=False, schema='account')
    op.create_index(op.f('ix_account_users_number_phone'), 'users', ['number_phone'], unique=True, schema='account')
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='menu'
    )
    op.create_index(op.f('ix_menu_categories_description'), 'categories', ['description'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_categories_id'), 'categories', ['id'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_categories_name'), 'categories', ['name'], unique=False, schema='menu')
    op.create_table('combo_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='menu'
    )
    op.create_index(op.f('ix_menu_combo_sets_description'), 'combo_sets', ['description'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_combo_sets_id'), 'combo_sets', ['id'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_combo_sets_name'), 'combo_sets', ['name'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_combo_sets_price'), 'combo_sets', ['price'], unique=False, schema='menu')
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='menu'
    )
    op.create_index(op.f('ix_menu_tags_id'), 'tags', ['id'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_tags_name'), 'tags', ['name'], unique=False, schema='menu')
    op.create_table('dishes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['menu.categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='menu'
    )
    op.create_index(op.f('ix_menu_dishes_description'), 'dishes', ['description'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_dishes_id'), 'dishes', ['id'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_dishes_is_available'), 'dishes', ['is_available'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_dishes_name'), 'dishes', ['name'], unique=False, schema='menu')
    op.create_index(op.f('ix_menu_dishes_price'), 'dishes', ['price'], unique=False, schema='menu')
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['account.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='orders'
    )
    op.create_index(op.f('ix_orders_orders_id'), 'orders', ['id'], unique=False, schema='orders')
    op.create_table('combo_dishes',
    sa.Column('combo_id', sa.Integer(), nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['combo_id'], ['menu.combo_sets.id'], ),
    sa.ForeignKeyConstraint(['dish_id'], ['menu.dishes.id'], ),
    sa.PrimaryKeyConstraint('combo_id', 'dish_id'),
    schema='menu'
    )
    op.create_table('dish_tags',
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dish_id'], ['menu.dishes.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['menu.tags.id'], ),
    sa.PrimaryKeyConstraint('dish_id', 'tag_id'),
    schema='menu'
    )
    op.create_table('baskets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['menu.dishes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['account.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='orders'
    )
    op.create_index(op.f('ix_orders_baskets_id'), 'baskets', ['id'], unique=False, schema='orders')
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dish_id'], ['menu.dishes.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='orders'
    )
    op.create_index(op.f('ix_orders_order_items_id'), 'order_items', ['id'], unique=False, schema='orders')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_orders_order_items_id'), table_name='order_items', schema='orders')
    op.drop_table('order_items', schema='orders')
    op.drop_index(op.f('ix_orders_baskets_id'), table_name='baskets', schema='orders')
    op.drop_table('baskets', schema='orders')
    op.drop_table('dish_tags', schema='menu')
    op.drop_table('combo_dishes', schema='menu')
    op.drop_index(op.f('ix_orders_orders_id'), table_name='orders', schema='orders')
    op.drop_table('orders', schema='orders')
    op.drop_index(op.f('ix_menu_dishes_price'), table_name='dishes', schema='menu')
    op.drop_index(op.f('ix_menu_dishes_name'), table_name='dishes', schema='menu')
    op.drop_index(op.f('ix_menu_dishes_is_available'), table_name='dishes', schema='menu')
    op.drop_index(op.f('ix_menu_dishes_id'), table_name='dishes', schema='menu')
    op.drop_index(op.f('ix_menu_dishes_description'), table_name='dishes', schema='menu')
    op.drop_table('dishes', schema='menu')
    op.drop_index(op.f('ix_menu_tags_name'), table_name='tags', schema='menu')
    op.drop_index(op.f('ix_menu_tags_id'), table_name='tags', schema='menu')
    op.drop_table('tags', schema='menu')
    op.drop_index(op.f('ix_menu_combo_sets_price'), table_name='combo_sets', schema='menu')
    op.drop_index(op.f('ix_menu_combo_sets_name'), table_name='combo_sets', schema='menu')
    op.drop_index(op.f('ix_menu_combo_sets_id'), table_name='combo_sets', schema='menu')
    op.drop_index(op.f('ix_menu_combo_sets_description'), table_name='combo_sets', schema='menu')
    op.drop_table('combo_sets', schema='menu')
    op.drop_index(op.f('ix_menu_categories_name'), table_name='categories', schema='menu')
    op.drop_index(op.f('ix_menu_categories_id'), table_name='categories', schema='menu')
    op.drop_index(op.f('ix_menu_categories_description'), table_name='categories', schema='menu')
    op.drop_table('categories', schema='menu')
    op.drop_index(op.f('ix_account_users_number_phone'), table_name='users', schema='account')
    op.drop_index(op.f('ix_account_users_id'), table_name='users', schema='account')
    op.drop_index(op.f('ix_account_users_email'), table_name='users', schema='account')
    op.drop_table('users', schema='account')
    # ### end Alembic commands ###
